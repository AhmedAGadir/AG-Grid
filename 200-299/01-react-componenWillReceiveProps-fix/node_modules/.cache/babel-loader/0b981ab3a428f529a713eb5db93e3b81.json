{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v19.1.4\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../../utils\");\n\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\n\nvar context_1 = require(\"../../context/context\");\n\nvar component_1 = require(\"../../widgets/component\");\n\nvar componentRecipes_1 = require(\"../../components/framework/componentRecipes\");\n\nvar constants_1 = require(\"../../constants\");\n\nvar OverlayWrapperComponent =\n/** @class */\nfunction (_super) {\n  __extends(OverlayWrapperComponent, _super);\n\n  function OverlayWrapperComponent() {\n    return _super.call(this) || this;\n  }\n\n  OverlayWrapperComponent.prototype.init = function () {};\n\n  OverlayWrapperComponent.prototype.showLoadingOverlay = function (eOverlayWrapper) {\n    var _this = this;\n\n    this.setTemplate(OverlayWrapperComponent.LOADING_WRAPPER_OVERLAY_TEMPLATE);\n    this.componentRecipes.newLoadingOverlayComponent().then(function (renderer) {\n      var loadingOverlayWrapper = _this.getRefElement(\"loadingOverlayWrapper\");\n\n      utils_1.Utils.removeAllChildren(loadingOverlayWrapper);\n      loadingOverlayWrapper.appendChild(renderer.getGui());\n    });\n    this.showOverlay(eOverlayWrapper, this.getGui());\n  };\n\n  OverlayWrapperComponent.prototype.showNoRowsOverlay = function (eOverlayWrapper) {\n    var _this = this;\n\n    this.setTemplate(OverlayWrapperComponent.NO_ROWS_WRAPPER_OVERLAY_TEMPLATE); // we don't use gridOptionsWrapper.addLayoutElement here because this component\n    // is passive, we don't want to add a new element each time it is created.\n\n    var eNoRowsOverlayWrapper = this.getRefElement('noRowsOverlayWrapper');\n    var domLayout = this.gridOptionsWrapper.getDomLayout();\n    var domLayoutAutoHeight = domLayout === constants_1.Constants.DOM_LAYOUT_AUTO_HEIGHT;\n    var domLayoutPrint = domLayout === constants_1.Constants.DOM_LAYOUT_PRINT;\n    var domLayoutNormal = domLayout === constants_1.Constants.DOM_LAYOUT_NORMAL;\n    utils_1.Utils.addOrRemoveCssClass(eNoRowsOverlayWrapper, 'ag-layout-auto-height', domLayoutAutoHeight);\n    utils_1.Utils.addOrRemoveCssClass(eNoRowsOverlayWrapper, 'ag-layout-normal', domLayoutNormal);\n    utils_1.Utils.addOrRemoveCssClass(eNoRowsOverlayWrapper, 'ag-layout-print', domLayoutPrint);\n    this.componentRecipes.newNoRowsOverlayComponent().then(function (renderer) {\n      var noRowsOverlayWrapper = _this.getRefElement(\"noRowsOverlayWrapper\");\n\n      utils_1.Utils.removeAllChildren(noRowsOverlayWrapper);\n      noRowsOverlayWrapper.appendChild(renderer.getGui());\n    });\n    this.showOverlay(eOverlayWrapper, this.getGui());\n  };\n\n  OverlayWrapperComponent.prototype.hideOverlay = function (eOverlayWrapper) {\n    utils_1.Utils.removeAllChildren(eOverlayWrapper);\n    utils_1.Utils.setVisible(eOverlayWrapper, false);\n  };\n\n  OverlayWrapperComponent.prototype.showOverlay = function (eOverlayWrapper, overlay) {\n    if (overlay) {\n      utils_1.Utils.removeAllChildren(eOverlayWrapper);\n      utils_1.Utils.setVisible(eOverlayWrapper, true);\n      eOverlayWrapper.appendChild(overlay);\n    } else {\n      console.warn('ag-Grid: unknown overlay');\n      this.hideOverlay(eOverlayWrapper);\n    }\n  }; // wrapping in outer div, and wrapper, is needed to center the loading icon\n  // The idea for centering came from here: http://www.vanseodesign.com/css/vertical-centering/\n\n\n  OverlayWrapperComponent.LOADING_WRAPPER_OVERLAY_TEMPLATE = '<div class=\"ag-overlay-panel\" role=\"presentation\">' + '<div class=\"ag-overlay-wrapper ag-overlay-loading-wrapper\" ref=\"loadingOverlayWrapper\">[OVERLAY_TEMPLATE]</div>' + '</div>';\n  OverlayWrapperComponent.NO_ROWS_WRAPPER_OVERLAY_TEMPLATE = '<div class=\"ag-overlay-panel\" role=\"presentation\">' + '<div class=\"ag-overlay-wrapper ag-overlay-no-rows-wrapper\" ref=\"noRowsOverlayWrapper\">[OVERLAY_TEMPLATE]</div>' + '</div>';\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], OverlayWrapperComponent.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('componentRecipes'), __metadata(\"design:type\", componentRecipes_1.ComponentRecipes)], OverlayWrapperComponent.prototype, \"componentRecipes\", void 0);\n\n  return OverlayWrapperComponent;\n}(component_1.Component);\n\nexports.OverlayWrapperComponent = OverlayWrapperComponent;","map":null,"metadata":{},"sourceType":"script"}