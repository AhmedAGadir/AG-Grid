{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v19.1.4\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar component_1 = require(\"../../widgets/component\");\n\nvar context_1 = require(\"../../context/context\");\n\nvar column_1 = require(\"../../entities/column\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar dragAndDropService_1 = require(\"../../dragAndDrop/dragAndDropService\");\n\nvar columnApi_1 = require(\"../../columnController/columnApi\");\n\nvar columnController_1 = require(\"../../columnController/columnController\");\n\nvar horizontalResizeService_1 = require(\"../horizontalResizeService\");\n\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\n\nvar cssClassApplier_1 = require(\"../cssClassApplier\");\n\nvar setLeftFeature_1 = require(\"../../rendering/features/setLeftFeature\");\n\nvar gridApi_1 = require(\"../../gridApi\");\n\nvar sortController_1 = require(\"../../sortController\");\n\nvar eventService_1 = require(\"../../eventService\");\n\nvar componentRecipes_1 = require(\"../../components/framework/componentRecipes\");\n\nvar agCheckbox_1 = require(\"../../widgets/agCheckbox\");\n\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\n\nvar selectAllFeature_1 = require(\"./selectAllFeature\");\n\nvar events_1 = require(\"../../events\");\n\nvar columnHoverService_1 = require(\"../../rendering/columnHoverService\");\n\nvar beans_1 = require(\"../../rendering/beans\");\n\nvar hoverFeature_1 = require(\"../hoverFeature\");\n\nvar touchListener_1 = require(\"../../widgets/touchListener\");\n\nvar HeaderWrapperComp =\n/** @class */\nfunction (_super) {\n  __extends(HeaderWrapperComp, _super);\n\n  function HeaderWrapperComp(column, dragSourceDropTarget, pinned) {\n    var _this = _super.call(this, HeaderWrapperComp.TEMPLATE) || this;\n\n    _this.column = column;\n    _this.dragSourceDropTarget = dragSourceDropTarget;\n    _this.pinned = pinned;\n    return _this;\n  }\n\n  HeaderWrapperComp.prototype.getColumn = function () {\n    return this.column;\n  };\n\n  HeaderWrapperComp.prototype.init = function () {\n    this.instantiate(this.context);\n    var displayName = this.columnController.getDisplayNameForColumn(this.column, 'header', true);\n    var enableSorting = this.gridOptionsWrapper.isEnableSorting() && !this.column.getColDef().suppressSorting;\n    var enableMenu = this.menuFactory.isMenuEnabled(this.column) && !this.column.getColDef().suppressMenu;\n    this.appendHeaderComp(displayName, enableSorting, enableMenu);\n    this.setupWidth();\n    this.setupMovingCss();\n    this.setupTooltip();\n    this.setupResize();\n    this.setupMenuClass();\n    this.setupSortableClass(enableSorting);\n    this.addColumnHoverListener();\n    this.addFeature(this.context, new hoverFeature_1.HoverFeature([this.column], this.getGui()));\n    this.addDestroyableEventListener(this.column, column_1.Column.EVENT_FILTER_ACTIVE_CHANGED, this.onFilterChanged.bind(this));\n    this.onFilterChanged();\n    this.addFeature(this.context, new selectAllFeature_1.SelectAllFeature(this.cbSelectAll, this.column));\n    var setLeftFeature = new setLeftFeature_1.SetLeftFeature(this.column, this.getGui(), this.beans);\n    setLeftFeature.init();\n    this.addDestroyFunc(setLeftFeature.destroy.bind(setLeftFeature));\n    this.addAttributes();\n    cssClassApplier_1.CssClassApplier.addHeaderClassesFromColDef(this.column.getColDef(), this.getGui(), this.gridOptionsWrapper, this.column, null);\n  };\n\n  HeaderWrapperComp.prototype.addColumnHoverListener = function () {\n    this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_HOVER_CHANGED, this.onColumnHover.bind(this));\n    this.onColumnHover();\n  };\n\n  HeaderWrapperComp.prototype.onColumnHover = function () {\n    var isHovered = this.columnHoverService.isHovered(this.column);\n    utils_1.Utils.addOrRemoveCssClass(this.getGui(), 'ag-column-hover', isHovered);\n  };\n\n  HeaderWrapperComp.prototype.setupSortableClass = function (enableSorting) {\n    if (enableSorting) {\n      var element = this.getGui();\n      utils_1.Utils.addCssClass(element, 'ag-header-cell-sortable');\n    }\n  };\n\n  HeaderWrapperComp.prototype.onFilterChanged = function () {\n    var filterPresent = this.column.isFilterActive();\n    utils_1.Utils.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-filtered', filterPresent);\n  };\n\n  HeaderWrapperComp.prototype.appendHeaderComp = function (displayName, enableSorting, enableMenu) {\n    var _this = this;\n\n    var params = {\n      column: this.column,\n      displayName: displayName,\n      enableSorting: enableSorting,\n      enableMenu: enableMenu,\n      showColumnMenu: function showColumnMenu(source) {\n        _this.gridApi.showColumnMenuAfterButtonClick(_this.column, source);\n      },\n      progressSort: function progressSort(multiSort) {\n        _this.sortController.progressSort(_this.column, !!multiSort, \"uiColumnSorted\");\n      },\n      setSort: function setSort(sort, multiSort) {\n        _this.sortController.setSortForColumn(_this.column, sort, !!multiSort, \"uiColumnSorted\");\n      },\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      context: this.gridOptionsWrapper.getContext()\n    };\n    var callback = this.afterHeaderCompCreated.bind(this, displayName);\n    this.componentRecipes.newHeaderComponent(params).then(callback);\n  };\n\n  HeaderWrapperComp.prototype.afterHeaderCompCreated = function (displayName, headerComp) {\n    this.appendChild(headerComp);\n    this.setupMove(headerComp.getGui(), displayName);\n\n    if (headerComp.destroy) {\n      this.addDestroyFunc(headerComp.destroy.bind(headerComp));\n    }\n  };\n\n  HeaderWrapperComp.prototype.onColumnMovingChanged = function () {\n    // this function adds or removes the moving css, based on if the col is moving.\n    // this is what makes the header go dark when it is been moved (gives impression to\n    // user that the column was picked up).\n    if (this.column.isMoving()) {\n      utils_1.Utils.addCssClass(this.getGui(), 'ag-header-cell-moving');\n    } else {\n      utils_1.Utils.removeCssClass(this.getGui(), 'ag-header-cell-moving');\n    }\n  };\n\n  HeaderWrapperComp.prototype.setupMove = function (eHeaderCellLabel, displayName) {\n    var _this = this;\n\n    var suppressMove = this.gridOptionsWrapper.isSuppressMovableColumns() || this.column.getColDef().suppressMovable || this.column.isLockPosition();\n\n    if (suppressMove) {\n      return;\n    }\n\n    if (eHeaderCellLabel) {\n      var dragSource_1 = {\n        type: dragAndDropService_1.DragSourceType.HeaderCell,\n        eElement: eHeaderCellLabel,\n        dragItemCallback: function dragItemCallback() {\n          return _this.createDragItem();\n        },\n        dragItemName: displayName,\n        dragSourceDropTarget: this.dragSourceDropTarget,\n        dragStarted: function dragStarted() {\n          return _this.column.setMoving(true, \"uiColumnMoved\");\n        },\n        dragStopped: function dragStopped() {\n          return _this.column.setMoving(false, \"uiColumnMoved\");\n        }\n      };\n      this.dragAndDropService.addDragSource(dragSource_1, true);\n      this.addDestroyFunc(function () {\n        return _this.dragAndDropService.removeDragSource(dragSource_1);\n      });\n    }\n  };\n\n  HeaderWrapperComp.prototype.createDragItem = function () {\n    var visibleState = {};\n    visibleState[this.column.getId()] = this.column.isVisible();\n    return {\n      columns: [this.column],\n      visibleState: visibleState\n    };\n  };\n\n  HeaderWrapperComp.prototype.setupResize = function () {\n    var _this = this;\n\n    var colDef = this.column.getColDef(); // if no eResize in template, do nothing\n\n    if (!this.eResize) {\n      return;\n    }\n\n    if (!this.column.isResizable()) {\n      utils_1.Utils.removeFromParent(this.eResize);\n      return;\n    }\n\n    var finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.eResize,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this, false),\n      onResizeEnd: this.onResizing.bind(this, true)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    var weWantAutoSize = !this.gridOptionsWrapper.isSuppressAutoSize() && !colDef.suppressAutoSize;\n\n    if (weWantAutoSize) {\n      this.addDestroyableEventListener(this.eResize, 'dblclick', function () {\n        _this.columnController.autoSizeColumn(_this.column, \"uiColumnResized\");\n      });\n      var touchListener = new touchListener_1.TouchListener(this.eResize);\n      this.addDestroyableEventListener(touchListener, touchListener_1.TouchListener.EVENT_DOUBLE_TAP, function () {\n        _this.columnController.autoSizeColumn(_this.column, \"uiColumnResized\");\n      });\n      this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n    }\n  };\n\n  HeaderWrapperComp.prototype.onResizing = function (finished, resizeAmount) {\n    var resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n    var newWidth = this.resizeStartWidth + resizeAmountNormalised;\n    this.columnController.setColumnWidth(this.column, newWidth, this.resizeWithShiftKey, finished, \"uiColumnDragged\");\n  };\n\n  HeaderWrapperComp.prototype.onResizeStart = function (shiftKey) {\n    this.resizeStartWidth = this.column.getActualWidth();\n    this.resizeWithShiftKey = shiftKey;\n  };\n\n  HeaderWrapperComp.prototype.setupTooltip = function () {\n    var colDef = this.column.getColDef(); // add tooltip if exists\n\n    if (colDef.headerTooltip) {\n      this.getGui().title = colDef.headerTooltip;\n    }\n  };\n\n  HeaderWrapperComp.prototype.setupMovingCss = function () {\n    this.addDestroyableEventListener(this.column, column_1.Column.EVENT_MOVING_CHANGED, this.onColumnMovingChanged.bind(this));\n    this.onColumnMovingChanged();\n  };\n\n  HeaderWrapperComp.prototype.addAttributes = function () {\n    this.getGui().setAttribute(\"col-id\", this.column.getColId());\n  };\n\n  HeaderWrapperComp.prototype.setupWidth = function () {\n    this.addDestroyableEventListener(this.column, column_1.Column.EVENT_WIDTH_CHANGED, this.onColumnWidthChanged.bind(this));\n    this.onColumnWidthChanged();\n  };\n\n  HeaderWrapperComp.prototype.setupMenuClass = function () {\n    this.addDestroyableEventListener(this.column, column_1.Column.EVENT_MENU_VISIBLE_CHANGED, this.onMenuVisible.bind(this));\n    this.onColumnWidthChanged();\n  };\n\n  HeaderWrapperComp.prototype.onMenuVisible = function () {\n    this.addOrRemoveCssClass('ag-column-menu-visible', this.column.isMenuVisible());\n  };\n\n  HeaderWrapperComp.prototype.onColumnWidthChanged = function () {\n    this.getGui().style.width = this.column.getActualWidth() + 'px';\n  }; // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n\n\n  HeaderWrapperComp.prototype.normaliseResizeAmount = function (dragChange) {\n    var result = dragChange;\n\n    if (this.gridOptionsWrapper.isEnableRtl()) {\n      // for RTL, dragging left makes the col bigger, except when pinning left\n      if (this.pinned !== column_1.Column.PINNED_LEFT) {\n        result *= -1;\n      }\n    } else {\n      // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n      if (this.pinned === column_1.Column.PINNED_RIGHT) {\n        result *= -1;\n      }\n    }\n\n    return result;\n  };\n\n  HeaderWrapperComp.TEMPLATE = '<div class=\"ag-header-cell\" role=\"presentation\" >' + '<div ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>' + '<ag-checkbox ref=\"cbSelectAll\" class=\"ag-header-select-all\" role=\"presentation\"></ag-checkbox>' + // <inner component goes here>\n  '</div>';\n\n  __decorate([context_1.Autowired('gridOptionsWrapper'), __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)], HeaderWrapperComp.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([context_1.Autowired('dragAndDropService'), __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)], HeaderWrapperComp.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([context_1.Autowired('columnController'), __metadata(\"design:type\", columnController_1.ColumnController)], HeaderWrapperComp.prototype, \"columnController\", void 0);\n\n  __decorate([context_1.Autowired('horizontalResizeService'), __metadata(\"design:type\", horizontalResizeService_1.HorizontalResizeService)], HeaderWrapperComp.prototype, \"horizontalResizeService\", void 0);\n\n  __decorate([context_1.Autowired('context'), __metadata(\"design:type\", context_1.Context)], HeaderWrapperComp.prototype, \"context\", void 0);\n\n  __decorate([context_1.Autowired('menuFactory'), __metadata(\"design:type\", Object)], HeaderWrapperComp.prototype, \"menuFactory\", void 0);\n\n  __decorate([context_1.Autowired('gridApi'), __metadata(\"design:type\", gridApi_1.GridApi)], HeaderWrapperComp.prototype, \"gridApi\", void 0);\n\n  __decorate([context_1.Autowired('columnApi'), __metadata(\"design:type\", columnApi_1.ColumnApi)], HeaderWrapperComp.prototype, \"columnApi\", void 0);\n\n  __decorate([context_1.Autowired('sortController'), __metadata(\"design:type\", sortController_1.SortController)], HeaderWrapperComp.prototype, \"sortController\", void 0);\n\n  __decorate([context_1.Autowired('eventService'), __metadata(\"design:type\", eventService_1.EventService)], HeaderWrapperComp.prototype, \"eventService\", void 0);\n\n  __decorate([context_1.Autowired('componentRecipes'), __metadata(\"design:type\", componentRecipes_1.ComponentRecipes)], HeaderWrapperComp.prototype, \"componentRecipes\", void 0);\n\n  __decorate([context_1.Autowired('columnHoverService'), __metadata(\"design:type\", columnHoverService_1.ColumnHoverService)], HeaderWrapperComp.prototype, \"columnHoverService\", void 0);\n\n  __decorate([context_1.Autowired('beans'), __metadata(\"design:type\", beans_1.Beans)], HeaderWrapperComp.prototype, \"beans\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('eResize'), __metadata(\"design:type\", HTMLElement)], HeaderWrapperComp.prototype, \"eResize\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('cbSelectAll'), __metadata(\"design:type\", agCheckbox_1.AgCheckbox)], HeaderWrapperComp.prototype, \"cbSelectAll\", void 0);\n\n  __decorate([context_1.PostConstruct, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], HeaderWrapperComp.prototype, \"init\", null);\n\n  return HeaderWrapperComp;\n}(component_1.Component);\n\nexports.HeaderWrapperComp = HeaderWrapperComp;","map":null,"metadata":{},"sourceType":"script"}