{"version":3,"file":"test-observables.js","sourceRoot":"","sources":["../../src/test-observables.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAAkC;AAGlC,yCAA+C;AAC/C,wCAA6C;AAC7C,qEAAoE;AACpE,uEAAsE;AAEtE;IAAwC,sCAAe;IACrD,4BACS,OAAe,EACf,MAAc,EACd,KAAW;QAHpB,YAKE,iBAAO,SAcR;QAlBQ,aAAO,GAAP,OAAO,CAAQ;QACf,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAM;QAIlB,IAAM,SAAS,GAAG,4BAAgB,EAAE,CAAC;QAErC,IAAM,QAAQ,GAAG,uBAAa,CAAC,YAAY,CACzC,OAAO,EACP,MAAM,EACN,KAAK,EACL,SAAS,EACT,IAAI,CACL,CAAC;QACF,IAAM,IAAI,GAAG,IAAI,+BAAc,CAAM,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC1D,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IACvC,CAAC;IAED,6CAAgB,GAAhB;QACE,OAAQ,IAAI,CAAC,MAAc,CAAC,eAAe,CAAC,CAAC;IAC/C,CAAC;IACH,yBAAC;AAAD,CAAC,AAzBD,CAAwC,iBAAU,GAyBjD;AAzBY,gDAAkB;AA2B/B;IAAuC,qCAAe;IACpD,2BACS,OAAe,EACf,MAAc,EACd,KAAW;QAHpB,YAKE,iBAAO,SAcR;QAlBQ,aAAO,GAAP,OAAO,CAAQ;QACf,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAM;QAIlB,IAAM,SAAS,GAAG,4BAAgB,EAAE,CAAC;QAErC,IAAM,QAAQ,GAAG,uBAAa,CAAC,YAAY,CACzC,OAAO,EACP,MAAM,EACN,KAAK,EACL,SAAS,EACT,IAAI,CACL,CAAC;QACF,IAAM,GAAG,GAAG,IAAI,6BAAa,CAAM,QAAQ,EAAE,SAAS,CAAC,CAAC;QACxD,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;IACrC,CAAC;IAED,4CAAgB,GAAhB;QACE,OAAQ,IAAI,CAAC,MAAc,CAAC,eAAe,CAAC,CAAC;IAC/C,CAAC;IACH,wBAAC;AAAD,CAAC,AAzBD,CAAuC,iBAAU,GAyBhD;AAzBY,8CAAiB","sourcesContent":["import { Observable } from 'rxjs';\nimport { SubscriptionLog } from 'rxjs/internal/testing/SubscriptionLog';\n\nimport { getTestScheduler } from './scheduler';\nimport { TestScheduler } from 'rxjs/testing';\nimport { HotObservable } from 'rxjs/internal/testing/HotObservable';\nimport { ColdObservable } from 'rxjs/internal/testing/ColdObservable';\n\nexport class TestColdObservable extends Observable<any> {\n  constructor(\n    public marbles: string,\n    public values?: any[],\n    public error?: any,\n  ) {\n    super();\n\n    const scheduler = getTestScheduler();\n\n    const messages = TestScheduler.parseMarbles(\n      marbles,\n      values,\n      error,\n      undefined,\n      true,\n    );\n    const cold = new ColdObservable<any>(messages, scheduler);\n    this.source = cold;\n    scheduler.coldObservables.push(cold);\n  }\n\n  getSubscriptions(): SubscriptionLog[] {\n    return (this.source as any)['subscriptions'];\n  }\n}\n\nexport class TestHotObservable extends Observable<any> {\n  constructor(\n    public marbles: string,\n    public values?: any[],\n    public error?: any,\n  ) {\n    super();\n\n    const scheduler = getTestScheduler();\n\n    const messages = TestScheduler.parseMarbles(\n      marbles,\n      values,\n      error,\n      undefined,\n      true,\n    );\n    const hot = new HotObservable<any>(messages, scheduler);\n    this.source = hot;\n    scheduler.hotObservables.push(hot);\n  }\n\n  getSubscriptions(): SubscriptionLog[] {\n    return (this.source as any)['subscriptions'];\n  }\n}\n\nexport type TestObservable = TestColdObservable | TestHotObservable;\n"]}