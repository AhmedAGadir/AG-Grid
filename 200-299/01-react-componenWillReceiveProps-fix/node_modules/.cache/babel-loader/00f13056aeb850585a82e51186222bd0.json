{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v19.1.4\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ChangedPath =\n/** @class */\nfunction () {\n  function ChangedPath(keepingColumns) {\n    this.active = true;\n    this.nodeIdsToBoolean = {};\n    this.nodeIdsToColumns = {};\n    this.keepingColumns = keepingColumns;\n  }\n\n  ChangedPath.prototype.setInactive = function () {\n    this.active = false;\n  };\n\n  ChangedPath.prototype.isActive = function () {\n    return this.active;\n  };\n\n  ChangedPath.prototype.addParentNode = function (rowNode, columns) {\n    var _this = this;\n\n    this.validateActive();\n    var pointer = rowNode;\n\n    while (pointer) {\n      // add this item to the path, all the way to parent\n      this.nodeIdsToBoolean[pointer.id] = true; // if columns, add the columns in all the way to parent, merging\n      // in any other columns that might be there already\n\n      if (this.keepingColumns && columns) {\n        if (!this.nodeIdsToColumns[pointer.id]) {\n          this.nodeIdsToColumns[pointer.id] = {};\n        }\n\n        columns.forEach(function (col) {\n          return _this.nodeIdsToColumns[pointer.id][col.getId()] = true;\n        });\n      }\n\n      pointer = pointer.parent;\n    }\n  };\n\n  ChangedPath.prototype.isInPath = function (rowNode) {\n    this.validateActive();\n    return this.nodeIdsToBoolean[rowNode.id];\n  };\n\n  ChangedPath.prototype.getValueColumnsForNode = function (rowNode, valueColumns) {\n    this.validateActive();\n\n    if (!this.keepingColumns) {\n      return valueColumns;\n    }\n\n    var colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    var result = valueColumns.filter(function (col) {\n      return colsForThisNode[col.getId()];\n    });\n    return result;\n  };\n\n  ChangedPath.prototype.getNotValueColumnsForNode = function (rowNode, valueColumns) {\n    this.validateActive();\n\n    if (!this.keepingColumns) {\n      return null;\n    }\n\n    var colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n    var result = valueColumns.filter(function (col) {\n      return !colsForThisNode[col.getId()];\n    });\n    return result;\n  }; // this is to check for a bug in our code. each part that uses ChangePath should check\n  // if it is valid first, and not use it if it is not valid\n\n\n  ChangedPath.prototype.validateActive = function () {\n    if (!this.active) {\n      throw \"ag-Grid: tried to work on an invalid changed path\";\n    }\n  };\n\n  return ChangedPath;\n}();\n\nexports.ChangedPath = ChangedPath;","map":null,"metadata":{},"sourceType":"script"}