{"ast":null,"code":"import _classCallCheck from \"/Users/ahmedgadir/Downloads/aggrid-sandpit-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ahmedgadir/Downloads/aggrid-sandpit-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ahmedgadir/Downloads/aggrid-sandpit-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ahmedgadir/Downloads/aggrid-sandpit-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ahmedgadir/Downloads/aggrid-sandpit-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ahmedgadir/Downloads/aggrid-sandpit-master/src/Grid.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nvar showAndHideOverlays = function showAndHideOverlays(gridApi, _ref) {\n  var loading = _ref.loading,\n      error = _ref.error,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows;\n  console.log('function showAndHideOverlays called');\n\n  if (!gridApi) {\n    return;\n  }\n\n  var showLoading = loading;\n  var showNoRowsOrError = error || rows.length === 0;\n\n  if (showLoading && !error) {\n    console.debug('[showAndHideOverlays] showLoadingOverlay');\n    gridApi.showLoadingOverlay();\n  }\n\n  if (!showLoading && error) {\n    console.debug('[showAndHideOverlays] showNoRowsOverlay');\n    gridApi.showNoRowsOverlay();\n  }\n\n  if (!showLoading && !showNoRowsOrError) {\n    console.debug('[showAndHideOverlays] hideOverlay');\n    gridApi.hideOverlay();\n  }\n};\n\nvar Grid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Grid, _Component);\n\n  function Grid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Grid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onGridReady = function (params) {\n      _this.gridApi = params.api;\n      _this.columnApi = params.columnApi;\n      showAndHideOverlays(_this.gridApi, _this.props);\n    };\n\n    return _this;\n  }\n\n  _createClass(Grid, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      showAndHideOverlays(this.gridApi, nextProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          rows = _this$props.rows,\n          columns = _this$props.columns;\n      return React.createElement(\"div\", {\n        className: \"grid-container\",\n        style: {\n          display: 'flex',\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ag-theme-balham\",\n        style: {\n          height: '800px',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(AgGridReact, {\n        suppressAggFuncInHeader: true,\n        columnDefs: columns,\n        onGridReady: function onGridReady(params) {\n          return _this2.onGridReady(params);\n        },\n        rowData: rows,\n        enableSorting: true,\n        enableFilter: true,\n        animateRows: true,\n        enableColResize: true,\n        suppressCellSelection: true,\n        rowSelection: \"single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Grid;\n}(Component);\n\nGrid.propTypes = {\n  rows: PropTypes.array,\n  columns: PropTypes.array,\n  loading: PropTypes.bool,\n  error: PropTypes.object\n};\nGrid.defaultProps = {\n  rows: [],\n  columns: []\n};\nexport { Grid as default };","map":{"version":3,"sources":["/Users/ahmedgadir/Downloads/aggrid-sandpit-master/src/Grid.js"],"names":["React","Component","PropTypes","AgGridReact","showAndHideOverlays","gridApi","loading","error","rows","console","log","showLoading","showNoRowsOrError","length","debug","showLoadingOverlay","showNoRowsOverlay","hideOverlay","Grid","onGridReady","params","api","columnApi","props","nextProps","nextContext","columns","display","width","height","propTypes","array","bool","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nconst showAndHideOverlays = (gridApi, { loading, error, rows = [] }) => {\n    console.log('function showAndHideOverlays called')\n    if (!gridApi) {\n        return;\n    }\n\n    const showLoading = loading;\n    const showNoRowsOrError = error || rows.length === 0;\n\n    if (showLoading && !error) {\n        console.debug('[showAndHideOverlays] showLoadingOverlay');\n        gridApi.showLoadingOverlay();\n    }\n\n    if (!showLoading && error) {\n        console.debug('[showAndHideOverlays] showNoRowsOverlay');\n        gridApi.showNoRowsOverlay();\n    }\n\n    if (!showLoading && !showNoRowsOrError) {\n        console.debug('[showAndHideOverlays] hideOverlay');\n        gridApi.hideOverlay();\n    }\n};\n\nexport default class Grid extends Component {\n\n    static propTypes = {\n        rows: PropTypes.array,\n        columns: PropTypes.array,\n\n        loading: PropTypes.bool,\n        error: PropTypes.object\n\n    };\n\n    static defaultProps = {\n        rows: [],\n        columns: []\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        showAndHideOverlays(this.gridApi, nextProps);\n    }\n\n    onGridReady = (params) => {\n        this.gridApi = params.api;\n        this.columnApi = params.columnApi;\n\n        showAndHideOverlays(this.gridApi, this.props);\n    };\n\n    render() {\n\n        const { rows, columns } = this.props;\n\n        return (\n            <div\n                className='grid-container'\n                style={{ display: 'flex', width: '100%', height: '100%' }}\n            >\n                <div\n                    className='ag-theme-balham'\n                    style={{ height: '800px', width: '100%' }}\n                >\n                    <AgGridReact\n                        suppressAggFuncInHeader={true}\n                        columnDefs={columns}\n                        onGridReady={(params) => this.onGridReady(params)}\n                        rowData={rows}\n                        enableSorting={true}\n                        enableFilter={true}\n                        animateRows={true}\n                        enableColResize={true}\n                        suppressCellSelection={true}\n                        rowSelection=\"single\"\n                    />\n                </div>\n            </div>)\n            ;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}