{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v19.1.4\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n\nvar CssClassApplier =\n/** @class */\nfunction () {\n  function CssClassApplier() {}\n\n  CssClassApplier.addHeaderClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (utils_1.Utils.missing(abstractColDef)) {\n      return;\n    }\n\n    this.addColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n  };\n\n  CssClassApplier.addToolPanelClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (utils_1.Utils.missing(abstractColDef)) {\n      return;\n    }\n\n    this.addColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n  };\n\n  CssClassApplier.addColumnClassesFromCollDef = function (classesOrFunc, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (utils_1.Utils.missing(classesOrFunc)) {\n      return;\n    }\n\n    var classToUse;\n\n    if (typeof classesOrFunc === 'function') {\n      var params = {\n        // bad naming, as colDef here can be a group or a column,\n        // however most people won't appreciate the difference,\n        // so keeping it as colDef to avoid confusion.\n        colDef: abstractColDef,\n        column: column,\n        columnGroup: columnGroup,\n        context: gridOptionsWrapper.getContext(),\n        api: gridOptionsWrapper.getApi()\n      };\n      var headerClassFunc = classesOrFunc;\n      classToUse = headerClassFunc(params);\n    } else {\n      classToUse = classesOrFunc;\n    }\n\n    if (typeof classToUse === 'string') {\n      utils_1.Utils.addCssClass(eHeaderCell, classToUse);\n    } else if (Array.isArray(classToUse)) {\n      classToUse.forEach(function (cssClassItem) {\n        utils_1.Utils.addCssClass(eHeaderCell, cssClassItem);\n      });\n    }\n  };\n\n  return CssClassApplier;\n}();\n\nexports.CssClassApplier = CssClassApplier;","map":null,"metadata":{},"sourceType":"script"}