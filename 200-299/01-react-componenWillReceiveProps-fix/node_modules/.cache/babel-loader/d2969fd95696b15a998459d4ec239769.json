{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v19.1.4\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // class returns unique instance id's for columns.\n// eg, the following calls (in this order) will result in:\n//\n// getInstanceIdForKey('country') => 0\n// getInstanceIdForKey('country') => 1\n// getInstanceIdForKey('country') => 2\n// getInstanceIdForKey('country') => 3\n// getInstanceIdForKey('age') => 0\n// getInstanceIdForKey('age') => 1\n// getInstanceIdForKey('country') => 4\n\nvar GroupInstanceIdCreator =\n/** @class */\nfunction () {\n  function GroupInstanceIdCreator() {\n    // this map contains keys to numbers, so we remember what the last call was\n    this.existingIds = {};\n  }\n\n  GroupInstanceIdCreator.prototype.getInstanceIdForKey = function (key) {\n    var lastResult = this.existingIds[key];\n    var result;\n\n    if (typeof lastResult !== 'number') {\n      // first time this key\n      result = 0;\n    } else {\n      result = lastResult + 1;\n    }\n\n    this.existingIds[key] = result;\n    return result;\n  };\n\n  return GroupInstanceIdCreator;\n}();\n\nexports.GroupInstanceIdCreator = GroupInstanceIdCreator;","map":null,"metadata":{},"sourceType":"script"}